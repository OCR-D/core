openapi: 3.0.0
info:
  description: This is a generic definition of the modules used for the OCR-D project. 
  
      * Implementation path for the different processors (description)
      
      * /preprocessing/characterization (Determine specific characteristics of a digitalization.)
      
      * /preprocessing/optimization (Execute all steps for image optimization at once.)
      
      * /preprocessing/optimization/cropping (Crops the digitization to printspace.)
      
      * /preprocessing/optimization/deskewing (Deskews the digitization.)
      
      * /preprocessing/optimization/despeckling (Despeckles the digitization.)
      
      * /preprocessing/optimization/dewarping (Dewarps the digitization.)
      
      * /preprocessing/optimization/binarization (Binarize the digitization.)
      
      *  /recognition/text-recognition (Estimate font families and languages used.)

      *  /recognition/font-identification (Estimate font families and languages used.)

      * /layout/segmentation (Detect and classify all regions of a page.)
      
      * /layout/segmentation/page (Detect all regions of a page.)
      
      * /layout/segmentation/line (Detect all text line regions inside the text regions of a page.)
      
      * /layout/segmentation/classification | Fine-grained classification of all detected regions of a page.)
      
      * /layout/analysis (Analyse regions on document level.)
  version: "1.1.0"
  title: "OCR-D"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "volker.hartmann@kit.edu"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
    - url: "http://test.ocr-d.de/v1"
tags:
    - name: "Image preprocessing"
      description: "Methods that characterize and optimize the digital representations for layout and text recognition."
    - name: "Layout analysis"
      description: "Registration of the correct text flow, that means the reproduction of the logical-structural text flow and high text accuracy."
    - name: "Text recognition and optimization"
      description: "Combination of several OCR engines with subsequent corrections to improve text results."
    - name: "Model training"
      description: "Training and provision of models."
    - name: "Long-term preservation"
      description: "Ensuring the long-term availability and referenceability of the texts obtained."
    - name: "Quality assurance"
      description: "Determination/estimation of the potential of each component."
paths:
  /ocrd/processor:
    post:
      tags:
        - "Image preprocessing"
        - "Layout analysis"
        - "Text recognition and optimization"
      summary: "Start job for processing one of the tasks defined by OCR-D."
      description: "Start job for processing one of the tasks defined by OCR-D. May create new images and/or new PAGE XML files depending on algorithm. It has to create a provenance file and a new METS file."
      operationId: start-processor
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/processors'
      responses:
        '201':
          description: Successful Operation. The created file(s) has/have to be referenced inside the given fileGrp sections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job-id'
          headers:
            Location:
              schema:
                type: string
                format: url
              description: URL of the generated job.
          # -----------------------------------------------------
          # Link
          # -----------------------------------------------------
          links:
            GetFilesByJobId:   # <---- arbitrary name for the link
              operationId: get-created-files-of-processor
              parameters:
                jobID: '$response.body#/jobID'

              description: >
                The `jobId` value returned in the response can be used as
                the `jobID` parameter in `GET /ocrd/processor/jobid/{jobID}`.
        '400':
          description: "Invalid input"
        '500':
          description: "Internal error"
  /ocrd/processor/jobid/{jobID}:
    get:
      tags:
        - "Image preprocessing"
        - "Layout analysis"
        - "Text recognition and optimization"
      summary: Get created files.
      description: Fetch all file created by job with id 'jobID'. If more than one file is created per mimetype use mimetype 'application/zip' as accept header to fetch all files at once.
      operationId: get-created-files-of-processor
      parameters:
        - in: path
          name: jobID
          schema:
            type: string
          required: true
          description: job ID of the started process.
      responses:
        '200':
          description: Successful Operation. 
          content:
            application/vnd.ocrd+job-status:
              schema:
                $ref: '#/components/schemas/job-status'
            application/mets+xml:
              schema:
                $ref: '#/components/schemas/mets-file'
            image/*:
              schema: 
                $ref: '#/components/schemas/image-file'
            application/vnd.ocrd.page+xml:
              schema: 
                $ref: '#/components/schemas/page-file'
            application/vnd.ocrd.prov+json:
              schema: 
                $ref: '#/components/schemas/provenance-file'
            application/vnd.ocrd.log+json:
              schema: 
                $ref: '#/components/schemas/logging'
            application/zip:
              schema: 
                $ref: '#/components/schemas/zip-file'
        '400':
          description: "Bad request. Maybe more than one file of at least one mimetype was created. Please use mimetype 'application/zip' as accept header to fetch all files at once."
        '500':
          description: "Internal error"
    delete:
      tags:
        - "Image preprocessing"
      summary: Delete all files created by job with ID 'jobID'.
      parameters:
        - in: path
          name: jobID
          schema:
            type: string
          required: true
          description: job ID of the started process.
      responses:
        '204':
          description: Successful Operation. All linked resources are removed successfully.
          content:
            application/vnd.ocrd+job-status:
              schema:
                $ref: '#/components/schemas/job-status'
        '404':
          description: "Not found."
        '410':
          description: "Resource is not available anymore."
        '500':
          description: "Internal error"
components:
  schemas:
    processors:
      type: object
      description: Object holding all parameters needed by most processors.
      properties:
        mets:
          $ref: '#/components/schemas/mets-file'
        input-file-grp:
          type: array
          items: 
            type: string
          description: ID(s) of the fileGrps which have to be used as input. (fileGrp@USE). 
        output-file-grp:
          type: array
          items: 
            type: string
          description: ID(s) of the fileGrps which have to be used as output. (fileGrp@USE).
        group-id:
          type: array
          items: 
            type: string
          description: All IDs of the image files which should be characterized. 
        parameter:
          type: array
          items: 
            type: string
          description: Parameter file in JSON format. 
        log-level:
          $ref: '#/components/schemas/log-level'
      required:
        - mets
        - input-file-grp
        - output-file-grp
    mets-file:
      type: string
      description: XML holding all information of the digitized document. All references of the images and the PAGE XMLs are available via fileGrp section  (see http://www.loc.gov/standards/mets/mets.xsd)
    page-file:
      type: string
      description: XML holding all information of the digitized page. (see http://schema.primaresearch.org/PAGE/gts/pagecontent/2017-07-15/pagecontent.xsd)
    image-file:
      type: string
      format: binary
      description: Image created by processor.
    zip-file:
      type: string
      format: binary
      description: >
        zip-file containing all files created by the processor. 
        Content of zip-file: 
          * METS file (mandatory) (default: mets.xml)
          * Provenance (mandatory) (default: provenance.json)
          * PAGE XML (optional) 
          * Images (optional) 
          * Output of (error) console. (optional) (default: output.json)
        
        All files have to be referenced inside the METS file.
    provenance-file:
      type: string
      description: JSON file holding all information about the provenance.
    message-with-timestamp:
      type: object
      properties:
        timestamp:
          type: string
          description: 'timestamp'
          format: date
        message:
          type: string
          description: 'message'
    logging:
      additionalProperties: false
      type: object
      properties:
        stdout:
          type: array   
          description: Output of console.
          items:
            $ref: '#/components/schemas/message-with-timestamp'
        stderr:
          type: array
          description: Output of error console.
          items:
            $ref: '#/components/schemas/message-with-timestamp'
      description: JSON file holding the output of the job.
    job-id:
      type: object
      properties:
        status: 
          $ref: '#/components/schemas/status'
        jobId:
          type: string
          description: ID of the created job.
      description: Status and job ID of created job.
    status:
      type: string
      enum:
        - OK
    job-status:
      type: string
      enum:
        - RUNNING
        - FINISHED
        - ERROR
        - STOPPED
      description: >
        Description of the status:
          * `RUNNING` - Job is not finished yet.
          * `FINISHED` - Job was executed successfully.
          * `ERROR` - Job was cancelled due to an error.
          * `STOPPED` - Job was stopped due to server restrictions.
    log-level:
      type: string
      enum:
        - OFF
        - ERROR
        - WARN
        - INFO
        - DEBUG
        - TRACE
      default: INFO
      example: DEBUG
      description: Minimum Log level. One of (OFF, ERROR, WARN, INFO (default), DEBUG, TRACE). Actual mechanism for filtering log messages must not be implemented by processors.
